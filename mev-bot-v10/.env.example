# MEV Bot V10 .env.example

# --- General Configuration ---
NODE_ENV=development
LOG_LEVEL=info

# --- Local Development & Third-Party RPC Configuration (Phase 1 Focus) ---
# Use a local private key ONLY for Phases 0 & 1 (paper trading simulations).
# This key's address will be used to identify the 'bot' in paper trading records if needed,
# but no actual signing occurs for paper trades.
LOCAL_DEV_PRIVATE_KEY=your-local-dev-paper-trading-wallet-private-key-here

# Third-party RPC provider for local development during Phase 1 (e.g., Alchemy, Infura)
# These will override values in config.yaml if provided
RPC_URL_MAINNET_HTTP="https://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY"
RPC_URL_MAINNET_WSS="wss://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY"
# RPC_URL_SEPOLIA_HTTP="https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY"
# RPC_URL_SEPOLIA_WSS="wss://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY"

# --- GCP Configuration (Primarily for later Phases or if using live Firestore/KMS locally) ---
GCP_PROJECT_ID="your-gcp-project-id" # Required for Firestore, even with emulator if project specific
# GOOGLE_APPLICATION_CREDENTIALS="/path/to/your/gcp-service-account-key.json" # For local GCP auth

# --- KMS Configuration (Not used for signing in Phase 1 paper trading) ---
# GCP_KMS_KEY_PATH="projects/your-gcp-project/locations/your-kms-location/keyRings/your-keyring/cryptoKeys/v10-signing-key/cryptoKeyVersions/1"

# --- Mempool Ingestion Service Connection ---
# This should match the PUBLISHER_PORT in mempool-ingestion-service/.env
MEMPOOL_PUBLISHER_URL="ws://localhost:3001"

# --- Firestore Configuration ---
# For local development, the Firestore emulator is recommended.
# If using a real Firestore instance locally, ensure GCP_PROJECT_ID and GOOGLE_APPLICATION_CREDENTIALS are set.
# FIRESTORE_EMULATOR_HOST="localhost:8080" # Uncomment if using Firestore emulator

# --- Other Optional API Keys (Store in GCP Secret Manager for Prod) ---
# ETHERSCAN_API_KEY="YOUR_ETHERSCAN_API_KEY"
# BLOCKNATIVE_API_KEY="YOUR_BLOCKNATIVE_API_KEY"
